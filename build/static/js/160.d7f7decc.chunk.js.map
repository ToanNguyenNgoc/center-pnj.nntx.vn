{"version":3,"file":"static/js/160.d7f7decc.chunk.js","mappings":"yPAWMA,GAAgBC,EAAAA,EAAAA,KAAS,WAC7B,IAAQC,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkDF,EAAAA,EAAAA,UAAwB,IAA1E,eAAOG,EAAP,KAA0BC,EAA1B,KACMC,GAAKC,EAAAA,EAAAA,MAAYD,GACvB,GAAgDE,EAAAA,EAAAA,UAAS,CACvDC,SAAU,CAACC,EAAAA,EAAAA,SAAAA,MAAsBJ,GACjCK,QAAS,kBAAMZ,EAAUa,QAAQC,OAAOP,KACxCQ,UAAWR,EACXS,UAJuD,SAI7CC,GACRb,EAAQa,EAAKd,MACbG,EAAqBW,EAAKC,gBANXC,EAAnB,EAAQC,UAA4BC,EAApC,EAAoCA,QAS5BC,GAAqBC,EAAAA,EAAAA,KAArBD,iBACFE,EAAW,SAACC,GACZC,MAAMC,QAAQF,GAChBA,EAAEG,SAAQ,SAACC,GAAD,OAAUC,EAAaD,MAEjCC,EAAaL,IAGXK,EAAe,SAACL,GACpBnB,GAAqB,SAAAyB,GACnB,IAAIC,GAAO,OAAOD,GAMlB,OAJEC,EADED,EAAKE,WAAU,SAAAC,GAAC,OAAIA,EAAE3B,KAAOkB,EAAElB,MAAM,EAChC,kBAAOyB,GAAP,CAAgBP,IAEbO,EAAQG,QAAO,SAAAD,GAAC,OAAIA,EAAE3B,KAAOkB,EAAElB,UAKzC6B,EAAa,SAAClB,GAClB,QAAUA,EAAYiB,QAAO,SAAAD,GAAC,OAAI7B,EAAkBgC,KAAI,SAAAC,GAAC,OAAIA,EAAEnC,QAAMoC,SAASL,EAAE/B,SAAOqC,SAAWtB,EAAYsB,SAEhH,GAA8BC,EAAAA,EAAAA,aAAgD,CAC5EC,WAAY,SAACC,GAAD,OAAUpC,EAAKP,EAAU4C,QAAQ9B,OAAOP,GAAKoC,GAAQ3C,EAAU6C,SAASF,IACpF3B,UAF4E,SAElEC,EAAM6B,EAAWC,GACzBC,EAAAA,GAAAA,QAAc,8BAEhBC,QAL4E,SAKpEC,EAAOJ,EAAWC,GACxBC,EAAAA,GAAAA,MAAY,gEANRG,EAAR,EAAQA,OAAQ/B,EAAhB,EAAgBA,UAahB,OACE,UAAC,KAAD,CAAkBF,YAAaX,EAAK,CAAC,iBAAkB,oBAAsB,CAAC,eAAgB6C,WAAS,EAAvG,WACE,SAAC,KAAD,CAAWC,MAAO9C,EAAK,sBAAc,uBACrC,iBAAK+C,UAAU,WAAf,WACE,gBAAKA,UAAU,+BAAf,UACE,iBAAKA,UAAU,uBAAf,WACE,kBAAOA,UAAU,qBAAjB,gCACA,SAAC,KAAD,CACEC,SAAU,SAAA9B,GAAC,OAAIrB,EAAQqB,EAAE+B,OAAOC,QAChCA,MAAOtD,EACPA,KAAK,WACLuD,YAAY,4BAIlB,gBAAKJ,UAAU,gCAAgC/C,GAAG,UAAlD,UACE,gBAAK+C,UAAU,QAAf,SAEIhC,EAAiBe,KAAI,SAAAsB,GAAM,OACzB,iBAAuBL,UAAU,OAAjC,WACE,iBAAMA,UAAU,UAAhB,SAA2BK,EAAOC,QAClC,iBAAKN,UAAU,oBAAf,WACE,gBAAKO,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAAaC,QAAS,WACtD5B,EAAWuB,EAAOzC,aACpBM,EAASmC,EAAOzC,aAEhBM,EAASmC,EAAOzC,YAAYiB,QAAO,SAAAD,GAAC,OAAK7B,EAAkBgC,KAAI,SAAAC,GAAC,OAAIA,EAAEnC,QAAMoC,SAASL,EAAE/B,WAJ3F,UAOE,4BACE,kBAAO8D,KAAK,WAAWX,UAAU,kCAAkCY,UAAQ,EAACC,QAAS/B,EAAWuB,EAAOzC,gBACvG,iBAAMoC,UAAU,MAAhB,mCAIFc,EAAgBT,EAAOzC,aAAamB,KAAI,SAACgC,EAAYC,GAAb,OACtC,gBAAiBT,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAChDC,QAAS,kBAAMxC,EAAS6C,IAD1B,UAGE,4BACE,kBAAOJ,KAAK,WAAWX,UAAU,kCAAkCY,UAAQ,EAACC,UAAY9D,EAAkBkE,MAAK,SAAArC,GAAC,OAAIA,EAAE3B,KAAO8D,EAAW9D,SACxI,iBAAM+C,UAAU,MAAhB,UACE,SAACkB,EAAD,CAAQrE,KAAMkE,EAAWlE,aANrBmE,WAjBRX,EAAOxD,cAmCzB,iBAAKmD,UAAU,6BAAf,UAEI/C,IACA,SAAC,KAAD,CACE8C,MAAM,oBACNC,UAAU,qBACVU,QAAS,kBAAM3C,KACfoD,QAAStD,KAGb,SAAC,KAAD,CACEkC,MAAM,WACNC,UAAU,cACVU,QAvES,WACU,IAAvB7D,EAAKuE,OAAOlC,QAChBW,EAAO,CAAEhD,KAAAA,EAAMwE,eAAgBtE,EAAkBgC,KAAI,SAAAH,GAAC,OAAIA,EAAE3B,SAsEpDkE,QAASrD,gBAQrB,YAEA,IAAMgD,EAAkB,SAAClD,GACvB,OAAOA,EAAY0D,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1E,KAAKqC,OAASsC,EAAE3E,KAAKqC,WAGrDgC,EAA+B,SAAC,GAAc,IAAZrE,EAAW,EAAXA,KAUtC,OACE,0BAViB,WACjB,IAAI4E,EAAQ,GAMZ,OALI5E,EAAKoC,SAAS,SAAQwC,EAAQ,gBAC9B5E,EAAKoC,SAAS,aAAYwC,EAAQ,kBAClC5E,EAAKoC,SAAS,SAAWpC,EAAKoC,SAAS,uBAAqBwC,EAAQ,sBACpE5E,EAAKoC,SAAS,cAAgBpC,EAAKoC,SAAS,aAAWwC,EAAQ,sBAC/D5E,EAAKoC,SAAS,gBAAewC,EAAQ,UAClCA,EAIJC","sources":["app/pages/roles/RolesFormPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { useParams } from \"react-router-dom\";\nimport { ButtonLoading, Input, PermissionLayout, TitlePage } from \"../../components\";\nimport { FC, useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Const } from \"../../common\";\nimport { useStores } from \"../../models/store\";\nimport { IPermission, IResponse, IRole, ReqRole } from \"../../interfaces\";\nimport { useGenPermissionGroup } from \"../../hooks\";\nimport { toast } from \"react-toastify\";\n\nconst RolesFormPage = observer(() => {\n  const { roleModel } = useStores();\n  const [name, setName] = useState('');\n  const [permissionsSelect, setPermissionsSelect] = useState<IPermission[]>([])\n  const id = useParams().id;\n  const { isLoading: isLoadingDetail, refetch } = useQuery({\n    queryKey: [Const.QueryKey.roles, id],\n    queryFn: () => roleModel.getRole(Number(id)),\n    enabled: !!id,\n    onSuccess(data) {\n      setName(data.name)\n      setPermissionsSelect(data.permissions);\n    },\n  })\n  const { permissionsGroup } = useGenPermissionGroup();\n  const onSelect = (e: IPermission | IPermission[]) => {\n    if (Array.isArray(e)) {\n      e.forEach((item) => toggleSelect(item))\n    } else {\n      toggleSelect(e)\n    }\n  }\n  const toggleSelect = (e: IPermission) => {\n    setPermissionsSelect(prev => {\n      let newPrev = [...prev]\n      if (prev.findIndex(i => i.id === e.id) < 0) {\n        newPrev = [...newPrev, e]\n      } else {\n        newPrev = newPrev.filter(i => i.id !== e.id)\n      }\n      return newPrev\n    })\n  }\n  const checkIsAll = (permissions: IPermission[]) => {\n    return !!(permissions.filter(i => permissionsSelect.map(j => j.name).includes(i.name)).length === permissions.length)\n  }\n  const { mutate, isLoading } = useMutation<IResponse<IRole>, unknown, ReqRole>({\n    mutationFn: (body) => id ? roleModel.putRole(Number(id), body) : roleModel.postRole(body),\n    onSuccess(data, variables, context) {\n      toast.success('Lưu thành công')\n    },\n    onError(error, variables, context) {\n      toast.error('Có lỗi xảy ra. Vui lòng thử lại')\n    },\n  })\n  const handleSave = () => {\n    if (name.trim().length === 0) return;\n    mutate({ name, permission_ids: permissionsSelect.map(i => i.id) });\n  }\n  return (\n    <PermissionLayout permissions={id ? ['.roles.:id.get', '.roles.:id.patch'] : ['.roles.post']} showEmpty>\n      <TitlePage title={id ? 'Cấp quyền' : 'Tạo mới'} />\n      <div className=\"card p-6\">\n        <div className=\"flex-row-sp input-wrap w-100\">\n          <div className=\"wrap-item mb-4 w-100\">\n            <label className=\"form-label fw-bold\">Tên quyền</label>\n            <Input\n              onChange={e => setName(e.target.value)}\n              value={name}\n              name=\"priority\"\n              placeholder=\"Tên quyền\"\n            />\n          </div>\n        </div>\n        <div className='post d-flex flex-column-fluid' id=\"kt_post\">\n          <div className=\"w-100\">\n            {\n              permissionsGroup.map(parent => (\n                <div key={parent.name} className=\"mb-8\">\n                  <span className=\"fw-bold\">{parent.desc}</span>\n                  <div className=\"w-100 d-flex mt-2\">\n                    <div style={{ width: '14.2%', cursor: 'pointer' }} onClick={() => {\n                      if (checkIsAll(parent.permissions)) {\n                        onSelect(parent.permissions)\n                      } else {\n                        onSelect(parent.permissions.filter(i => !permissionsSelect.map(j => j.name).includes(i.name)))\n                      }\n                    }}>\n                      <div>\n                        <input type=\"checkbox\" className=\"form-check-input cursor-pointer\" readOnly checked={checkIsAll(parent.permissions)} />\n                        <span className=\"m-2\">Tất cả</span>\n                      </div>\n                    </div>\n                    {\n                      sortPermissions(parent.permissions).map((permission, index) => (\n                        <div key={index} style={{ width: '14.2%', cursor: 'pointer' }}\n                          onClick={() => onSelect(permission)}\n                        >\n                          <div>\n                            <input type=\"checkbox\" className=\"form-check-input cursor-pointer\" readOnly checked={!!(permissionsSelect.find(i => i.id === permission.id))} />\n                            <span className=\"m-2\">\n                              <Method name={permission.name} />\n                            </span>\n                          </div>\n                        </div>\n                      ))\n                    }\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-end\">\n          {\n            id &&\n            <ButtonLoading\n              title=\"Khôi phục\"\n              className=\"btn-secondary me-2\"\n              onClick={() => refetch()}\n              loading={isLoadingDetail}\n            />\n          }\n          <ButtonLoading\n            title=\"Lưu\"\n            className=\"btn-success\"\n            onClick={handleSave}\n            loading={isLoading}\n          />\n        </div>\n      </div>\n    </PermissionLayout>\n  )\n})\n\nexport default RolesFormPage;\n\nconst sortPermissions = (permissions: IPermission[]): IPermission[] => {\n  return permissions.sort((a, b) => a.name.length - b.name.length)\n}\n\nconst Method: FC<{ name: string }> = ({ name }) => {\n  const renderName = () => {\n    let tName = '';\n    if (name.includes('get')) tName = 'Danh sách';\n    if (name.includes(':id.get')) tName = 'Chi tiết';\n    if (name.includes('post') || name.includes('sendNotification')) tName = 'Tạo mới';\n    if (name.includes(':id.patch') || name.includes('update')) tName = 'Cập nhật';\n    if (name.includes(':id.delete')) tName = 'Xóa';\n    return tName\n  }\n  return (\n    <span>\n      {renderName()}\n    </span>\n  )\n}"],"names":["RolesFormPage","observer","roleModel","useStores","useState","name","setName","permissionsSelect","setPermissionsSelect","id","useParams","useQuery","queryKey","Const","queryFn","getRole","Number","enabled","onSuccess","data","permissions","isLoadingDetail","isLoading","refetch","permissionsGroup","useGenPermissionGroup","onSelect","e","Array","isArray","forEach","item","toggleSelect","prev","newPrev","findIndex","i","filter","checkIsAll","map","j","includes","length","useMutation","mutationFn","body","putRole","postRole","variables","context","toast","onError","error","mutate","showEmpty","title","className","onChange","target","value","placeholder","parent","desc","style","width","cursor","onClick","type","readOnly","checked","sortPermissions","permission","index","find","Method","loading","trim","permission_ids","sort","a","b","tName","renderName"],"sourceRoot":""}