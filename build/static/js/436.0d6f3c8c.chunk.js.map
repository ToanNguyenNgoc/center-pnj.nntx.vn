{"version":3,"file":"static/js/436.0d6f3c8c.chunk.js","mappings":"+OASMA,GAAaC,EAAAA,EAAAA,KAAS,WAC1B,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAIIE,EAAAA,EAAAA,MAHFC,EADF,EACEA,QACAC,EAFF,EAEEA,uBAAwBC,EAF1B,EAE0BA,kBAAmBC,EAF7C,EAE6CA,iBAC3CC,EAHF,EAGEA,cAAeC,EAHjB,EAGiBA,UAAWC,EAH5B,EAG4BA,SAE5B,GAA+BC,EAAAA,EAAAA,UAAgB,IAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,YAApC,eAAOG,EAAP,KAAmBC,EAAnB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8FACZb,IADY,OAElBC,GAAuB,SAACa,GACtBC,QAAQC,IAAIF,MAEdZ,GAAkB,SAACY,GACjBC,QAAQC,IAAIF,EAAKG,SACjBR,GAAW,SAACS,GAAD,wBAAmBA,GAAnB,CAAyBJ,EAAKG,gBAE3Cd,GAAiB,SAACW,GAChBC,QAAQC,IAAIF,EAAKG,SACbH,EAAKG,QAAQE,UACfR,EAAcG,EAAKG,QAAQG,MAE3BT,OAAcU,MAdA,2CAAH,qDAmBjB,OADAR,IACO,WACLE,QAAQC,IAAI,mDAEb,IACH,OAAwBT,EAAAA,EAAAA,UAAS,IAAjC,eAAOe,EAAP,KAAaC,EAAb,KAQA,OACE,iBAAKC,UAAU,WAAf,WACE,SAAC,KAAD,CAAWC,MAAM,6BAAcC,SAC7B,SAAC,KAAD,CAAkBC,YAAa,CAAC,gBAAhC,UACE,SAAC,KAAD,CAAMC,GAAI,eAAgBJ,UAAU,kBAApC,oCAGJ,0BAEIhB,EAASqB,KAAI,SAACC,EAAcC,GAAf,aACX,yBACE,4BACE,kBAAMP,UAAU,eAAhB,oBAAgCM,EAAQV,YAAxC,aAAgC,EAAcY,SAA9C,QACA,0BAAOF,EAAQG,UAHVF,MASVrB,GAAcA,EAAWwB,MAAX,OAAkBrC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASqC,MAC1C,yBAAI,kBAAMV,UAAU,UAAhB,UAA2Bd,EAAWsB,SAAtC,sBAGR,iBAAKR,UAAU,cAAf,WACE,SAAC,KAAD,CACEW,MAAOb,EACPc,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAOH,QAChCI,YAAY,QACZC,QAAS,kBAAMlC,EAAS,CAAEa,WAAW,EAAMsB,SAvEpC,KAwEPC,OAAQ,kBAAMpC,EAAS,CAAEa,WAAW,EAAOsB,SAxEpC,QA0ET,SAAC,KAAD,CACEhB,MAAM,OACNkB,KAAK,SACLC,QAzCc,WACpBvC,EAAU,CACRoC,SAtCW,EAuCXR,IAAKX,IAEPC,EAAQ,WAuCN,SAAC,KAAD,CACEE,MAAM,eACNkB,KAAK,SACLC,QAAS,kBAAMxC,EAAc,CAC3ByC,aAAc,EACdC,SAAU,EACVb,IAAK,KACLc,WAAY,wBAOtB","sources":["app/pages/brands/BrandsPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { ButtonLoading, Input, PermissionLayout, TitlePage } from \"../../components\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth, useSocketService } from \"../../hooks\";\nimport { IResponse, IUserProfile } from \"../../interfaces\";\n\nconst topic_id = 1;\n\nconst BrandsPage = observer(() => {\n  const { profile } = useAuth()\n  const {\n    connect,\n    onListenerTopicCreated, onListenerMessage, onListenerTyping,\n    doCreateTopic, doMessage, doTyping,\n  } = useSocketService()\n  const [messages, setMessage] = useState<any[]>([])\n  const [userTyping, setUserTyping] = useState<IUserProfile>()\n  useEffect(() => {\n    const setupSocket = async () => {\n      await connect();\n      onListenerTopicCreated((data: any) => {\n        console.log(data)\n      })\n      onListenerMessage((data: IResponse<any>) => {\n        console.log(data.context);\n        setMessage((prev: any) => [...prev, data.context])\n      });\n      onListenerTyping((data: IResponse<any>) => {\n        console.log(data.context);\n        if (data.context.is_typing) {\n          setUserTyping(data.context.user);\n        } else {\n          setUserTyping(undefined);\n        }\n      })\n    };\n    setupSocket();\n    return () => {\n      console.log(\"Component unmounted, socket disconnecting...\");\n    };\n  }, []);\n  const [text, setText] = useState('')\n  const onSendMessage = () => {\n    doMessage({\n      topic_id,\n      msg: text\n    });\n    setText('')\n  }\n  return (\n    <div className=\"card p-3\">\n      <TitlePage title=\"Thương hiệu\" element={\n        <PermissionLayout permissions={['.brands.post']}>\n          <Link to={'/brands-form'} className=\"btn btn-primary\">Tạo mới</Link>\n        </PermissionLayout>\n      } />\n      <ul>\n        {\n          messages.map((message: any, index) => (\n            <li key={index}>\n              <div>\n                <span className=\"fw-bold me-2\">{message.user?.fullname}:</span>\n                <span>{message.msg}</span>\n              </div>\n            </li>\n          ))\n        }\n        {\n          (userTyping && userTyping.id !== profile?.id) &&\n          <li><span className=\"fw-bold\">{userTyping.fullname} typing...</span></li>\n        }\n      </ul>\n      <div className=\"d-flex mt-6\">\n        <Input\n          value={text}\n          onChange={e => setText(e.target.value)}\n          placeholder=\"Aa...\"\n          onFocus={() => doTyping({ is_typing: true, topic_id })}\n          onBlur={() => doTyping({ is_typing: false, topic_id })}\n        />\n        <ButtonLoading\n          title=\"Send\"\n          type=\"button\"\n          onClick={onSendMessage}\n        />\n      </div>\n      <ButtonLoading\n        title=\"create topic\"\n        type=\"button\"\n        onClick={() => doCreateTopic({\n          recipient_id: 6,\n          media_id: 1,\n          msg: 'OK',\n          group_name: 'group name'\n        })}\n      />\n    </div>\n  )\n})\n\nexport default BrandsPage;"],"names":["BrandsPage","observer","profile","useAuth","useSocketService","connect","onListenerTopicCreated","onListenerMessage","onListenerTyping","doCreateTopic","doMessage","doTyping","useState","messages","setMessage","userTyping","setUserTyping","useEffect","setupSocket","data","console","log","context","prev","is_typing","user","undefined","text","setText","className","title","element","permissions","to","map","message","index","fullname","msg","id","value","onChange","e","target","placeholder","onFocus","topic_id","onBlur","type","onClick","recipient_id","media_id","group_name"],"sourceRoot":""}