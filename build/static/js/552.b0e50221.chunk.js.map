{"version":3,"file":"static/js/552.b0e50221.chunk.js","mappings":"iSAmBMA,GAAwBC,EAAAA,EAAAA,KAAS,WAAO,IAAD,EACrCC,GAAKC,EAAAA,EAAAA,MAAYD,GACfE,GAAUC,EAAAA,EAAAA,MAAVD,MACAE,GAAsBC,EAAAA,EAAAA,MAAtBD,kBACAE,GAAoBC,EAAAA,EAAAA,MAApBD,gBACFE,GAAiBC,EAAAA,EAAAA,aAAY,CACjCC,WAAY,SAACC,GAAD,OAA+BX,EAAKI,EAAkBQ,SAASC,OAAOb,GAAKW,GAAQP,EAAkBU,QAAQH,IACzHI,UAFiC,WAEnBC,EAAAA,GAAAA,WACdC,QAHiC,WAGrBD,EAAAA,GAAAA,WAERE,GAASC,EAAAA,EAAAA,IAAmB,CAChCC,cAAe,CACbC,KAAM,GACNC,mBAAeC,EACfC,mBAAeD,EACfE,eAAWF,EACXG,cAAe,GACfC,cAAUJ,EACVK,WAAOL,EACPM,SAAU,GACVC,QAAQ,GAEVC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCZ,KAAMW,EAAAA,KAAaE,SAAS,gCAC5BR,cAAeM,EAAAA,KAAaE,SAAS,kDAEvCC,SAAU,SAACC,GAAY,IAAD,EACdzB,GAAO0B,EAAAA,EAAAA,MAAKD,EAAQ,CAAC,UAC3BzB,EAAKkB,SAAWlB,EAAKkB,SAASS,QAAO,SAAAC,GAAC,OAAIA,EAAEC,cAAgBD,EAAEE,SAC9DjC,EAAekC,QAAf,kBAA2B/B,GAA3B,IAAiCgB,SAAQ,UAAES,EAAOR,aAAT,aAAE,EAAc5B,SAG7D,GAAgC2C,EAAAA,EAAAA,UAAS,CACvCC,SAAU,CAACC,EAAAA,EAAAA,SAAAA,cAA8B7C,GACzC8C,QAAS,kBAAM1C,EAAkB2C,OAAOlC,OAAOb,KAC/CgD,UAAWhD,EACXe,UAJuC,SAI7BkC,GAAO,IAAD,MACd/B,EAAOgC,WAAP,kBACKD,GADL,IAEE3B,cAAa,UAAE2B,EAAKE,gBAAP,aAAE,EAAeC,KAC9B5B,cAAa,UAAEyB,EAAKI,gBAAP,aAAE,EAAeD,KAC9B3B,UAAS,UAAEwB,EAAKK,YAAP,aAAE,EAAWF,WATpBG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WA6BX3B,EAAWX,EAAOkB,OAAOP,SAIzB4B,EAAiB,SAACC,EAAeC,EAAalB,GAClD,IAAMmB,EAAc/B,EAASgC,KAAI,SAACC,EAAMC,GAMtC,OAJIL,IAAUK,IADAD,EAGJH,GAAOlB,GAEVqB,KAET5C,EAAO8C,cAAc,WAAYJ,IAK7BK,EAAsB,SAAC5C,GAC3B,IAAM6C,EAAOhE,EAAMiE,MAAK,SAAA5B,GAAC,OAAIA,EAAElB,OAASA,KACxC,GAAK6C,EACL,MAAO,CAAEzB,MAAOyB,EAAK7C,KAAM+C,MAAOF,EAAKG,OAEzC,OACE,UAAC,KAAD,CAAkBC,YAAatE,EAAK,CAAC,2BAA4B,2BAA6B,CAAC,uBAA/F,WACE,SAAC,KAAD,CAAWuE,MAAM,6BACjB,gBAAKC,UAAU,WAAf,UACE,kBACErC,SAAUjB,EAAOuD,aACjBC,YAAU,EAACF,UAAU,OAFvB,WAIE,iBAAKA,UAAU,WAAf,WACE,kBAAOA,UAAU,uCAAjB,+BACA,iBAAKA,UAAU,qCAAf,WACE,SAAC,KAAD,CAAQG,SAAQ,UAAEzD,EAAOkB,OAAOR,aAAhB,aAAE,EAAqBgD,aAAcC,KAAM,OAC3D,SAAC,KAAD,CAAcA,KAAM,GAAIL,UAAU,OAChCM,aApDI,SAACC,GACjBzE,EAAgB,CACdyE,MAAAA,EACAC,cAFc,SAEAC,GACRA,EAAO,GAAGC,YACZhE,EAAO8C,cAAc,SAArB,kBAAmC9C,EAAOkB,OAAOR,OAAjD,IAAwDgD,aAAcK,EAAO,GAAGC,eAGpFC,YAPc,SAOFF,GACNA,EAAO,GAAGC,YACZhE,EAAO8C,cAAc,SAArB,kBAAmC9C,EAAOkB,OAAOR,OAAjD,IAAwDgD,aAAcK,EAAO,GAAGC,WAAYlF,GAAIiF,EAAO,GAAGjF,mBA8C1G,iBAAKwE,UAAU,WAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,kCAGF,iBAAKA,UAAU,kBAAf,WACE,0BACEA,UAAU,kDACVY,YAAY,qBACRlE,EAAOmE,cAAc,UAE1BnE,EAAOoE,QAAQjE,MAAQH,EAAOqE,OAAOlE,OACpC,gBAAKmD,UAAU,+BAAf,UACE,gBAAKA,UAAU,gBAAf,SAAgCtD,EAAOqE,OAAOlE,gBAKtD,SAAC,KAAD,CACEa,UAAQ,EACRZ,cAAeJ,EAAOkB,OAAOd,cAAekE,iBAAkB,SAAApC,GAAI,OAAIlC,EAAO8C,cAAc,gBAAiBZ,IAC5G5B,cAAeN,EAAOkB,OAAOZ,cAAeiE,iBAAkB,SAAArC,GAAI,OAAIlC,EAAO8C,cAAc,gBAAiBZ,IAC5G3B,UAAWP,EAAOkB,OAAOX,UAAWiE,aAAc,SAAAtC,GAAI,OAAIlC,EAAO8C,cAAc,YAAaZ,OAE9F,iBAAKoB,UAAU,WAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,uCAGF,iBAAKA,UAAU,kBAAf,WACE,0BACEA,UAAU,kDACVY,YAAY,0BACRlE,EAAOmE,cAAc,mBAE1BnE,EAAOoE,QAAQ5D,eAAiBR,EAAOqE,OAAO7D,gBAC7C,gBAAK8C,UAAU,+BAAf,UACE,gBAAKA,UAAU,gBAAf,SAAgCtD,EAAOqE,OAAO7D,yBAKtD,iBAAK8C,UAAU,WAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,oDAEF,gBAAKA,UAAU,kBAAf,UACE,SAAC,KAAD,CAAQmB,QAASzE,EAAOkB,OAAON,OAAQ8D,SAAU,SAAAC,GAAC,OAAI3E,EAAO8C,cAAc,SAAU6B,YAGzF,iBAAKrB,UAAU,OAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,8DAEF,iBAAKA,UAAU,mBAAf,WAEE,mBAAOA,UAAU,+BAAjB,WAEE,4BACE,gBAAIA,UAAU,8BAAd,WACE,eAAIA,UAAU,mBAAd,gDACA,eAAIA,UAAU,iCAAd,8BACA,eAAIA,UAAU,iCAAd,mBACA,eAAIA,UAAU,wCAGlB,2BAEItD,EAAOkB,OAAOP,SAASgC,KAAI,SAACC,EAAMJ,GAChC,OACE,2BACE,yBACE,SAAC,KAAD,CACEjB,MAAOwB,EAAoBH,EAAKtB,cAAgB,IAChDoD,SAAU,SAACC,GAAD,OAAYpC,EAAeC,EAAO,eAAgBmC,EAAEpD,QAC9DqD,QAAS5F,EAAM2D,KAAI,SAAAK,GAAI,MAAK,CAAEzB,MAAOyB,EAAK7C,KAAM+C,MAAOF,EAAKG,cAGhE,yBACE,SAAC,KAAD,CAAOe,YAAY,kBAAUW,aAAcjC,EAAKrB,MAAOmD,SAAU,SAAAC,GAAC,OAAIpC,EAAeC,EAAO,QAASmC,EAAEG,OAAOvD,aAEhH,yBACE,SAAC,KAAD,CAAO2C,YAAY,YAAYW,aAAcjC,EAAKmC,KAAML,SAAU,SAAAC,GAAC,OAAIpC,EAAeC,EAAO,OAAQmC,EAAEG,OAAOvD,aAEhH,yBACE,mBACEyB,KAAK,SACLM,UAAU,4DACV0B,QAAS,kBAjHf,SAACxC,GACrBxC,EAAO8C,cAAc,WAAYnC,EAASS,QAAO,SAAC6D,EAAIpC,GAAL,OAAsBA,IAAiBL,MAgH/C0C,CAAc1C,IAH/B,UAKE,SAAC,KAAD,CAAO2C,KAAK,0CAA0C7B,UAAU,qBApB7Dd,SA8BjB,yBAKF,gBAAKc,UAAU,6BAAf,UACE,SAAC,KAAD,CACEA,UAAU,0BACVD,MAAM,mCACNL,KAAK,SACLgC,QArJM,WACpBhF,EAAO8C,cAAc,WAArB,kBAAqCnC,GAArC,CAA+C,kBA0JzC,iBAAK2C,UAAU,mDAAf,UAEIxE,IACA,SAAC,KAAD,CACEuE,MAAM,oBACNC,UAAU,qBACVN,KAAK,SACLgC,QAAS,kBAAM3C,KACf+C,QAAS9C,KAGb,SAAC,KAAD,CACEe,MAAM,wBACNL,KAAK,SACLoC,QAAS9F,EAAe+F,0BAStC","sources":["app/pages/organizations/OrganizationsFormPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { useParams } from \"react-router-dom\";\nimport { Avatar, ButtonLoading, ButtonUpload, Input, PermissionLayout, SelectOptionProvince, Switch, TitlePage } from \"../../components\";\nimport { useFormik } from \"formik\";\nimport { IMedia, IOrganizationContact, ReqPostOrganization } from \"../../interfaces\";\nimport * as Yup from 'yup';\nimport { useGetOrgContactTypes, usePostMedia } from \"../../hooks\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useStores } from \"../../models/store\";\nimport { Toast } from \"../../utils\";\nimport { omit } from 'lodash'\nimport { Const } from \"../../common\";\nimport { KTSVG } from \"../../../_metronic/helpers\";\nimport Select from 'react-select';\n\ninterface ReqPost extends ReqPostOrganization {\n  media?: IMedia | null\n}\n\nconst OrganizationsFormPage = observer(() => {\n  const id = useParams().id;\n  const { types } = useGetOrgContactTypes()\n  const { organizationModel } = useStores();\n  const { handlePostMedia } = usePostMedia();\n  const mutateSaveData = useMutation({\n    mutationFn: (body: ReqPostOrganization) => id ? organizationModel.patchOrg(Number(id), body) : organizationModel.postOrg(body),\n    onSuccess() { Toast.success() },\n    onError() { Toast.error() }\n  })\n  const formik = useFormik<ReqPost>({\n    initialValues: {\n      name: '',\n      province_code: undefined,\n      district_code: undefined,\n      ward_code: undefined,\n      short_address: '',\n      media_id: undefined,\n      media: undefined,\n      contacts: [],\n      active: true,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Vui lòng nhập tên'),\n      short_address: Yup.string().required('Vui lòng nhập địa chỉ')\n    }),\n    onSubmit: (values) => {\n      const body = omit(values, ['media']);\n      body.contacts = body.contacts.filter(i => i.contact_type && i.value)\n      mutateSaveData.mutate({ ...body, media_id: values.media?.id });\n    }\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [Const.QueryKey.organizations, id],\n    queryFn: () => organizationModel.getOrg(Number(id)),\n    enabled: !!id,\n    onSuccess(data) {\n      formik.setValues({\n        ...data,\n        province_code: data.province?.code,\n        district_code: data.district?.code,\n        ward_code: data.ward?.code,\n      })\n    },\n  })\n  const postMedia = (files: FileList) => {\n    handlePostMedia({\n      files,\n      callBackLocal(medias) {\n        if (medias[0].origin_url) {\n          formik.setFieldValue('media', { ...formik.values.media, original_url: medias[0].origin_url })\n        }\n      },\n      callBackApi(medias) {\n        if (medias[0].origin_url) {\n          formik.setFieldValue('media', { ...formik.values.media, original_url: medias[0].origin_url, id: medias[0].id })\n        }\n      },\n    })\n  }\n  //Handle CRUD Contact\n  const contacts = formik.values.contacts as IOrganizationContact[]\n  const addRowContact = () => {\n    formik.setFieldValue('contacts', [...contacts, {}])\n  }\n  const editRowContact = (index: number, key: string, value: string) => {\n    const newContacts = contacts.map((item, indexContact) => {\n      let newItem = item;\n      if (index === indexContact) {\n        //@ts-ignore\n        newItem[key] = value;\n      }\n      return item\n    })\n    formik.setFieldValue('contacts', newContacts)\n  }\n  const deleteRowItem = (index: number) => {\n    formik.setFieldValue('contacts', contacts.filter((_i, indexContact) => indexContact !== index));\n  }\n  const getValueContactType = (name: string) => {\n    const type = types.find(i => i.name === name);\n    if (!type) return undefined;\n    return { value: type.name, label: type.desc }\n  }\n  return (\n    <PermissionLayout permissions={id ? ['.organizations.:id.patch', '.admin.orders.:id.patch'] : ['.organizations.post']}>\n      <TitlePage title=\"Thông tin công ty\" />\n      <div className=\"card p-6\">\n        <form\n          onSubmit={formik.handleSubmit}\n          noValidate className='form'\n        >\n          <div className='row mb-6'>\n            <label className='col-lg-4 col-form-label fw-bold fs-6'>Hình ảnh</label>\n            <div className='col-lg-8 d-flex align-items-center'>\n              <Avatar imageUrl={formik.values.media?.original_url} size={200} />\n              <ButtonUpload size={40} className=\"ms-4\"\n                onChangeFile={postMedia}\n              />\n            </div>\n          </div>\n          <div className='row mb-6'>\n            <label className='col-lg-4 col-form-label fw-bold fs-6'>\n              <span className='required'>Tên công ty</span>\n            </label>\n\n            <div className='col-lg-8 fv-row'>\n              <input\n                className='form-control form-control-lg form-control-solid'\n                placeholder='Tên công ty'\n                {...formik.getFieldProps('name')}\n              />\n              {formik.touched.name && formik.errors.name && (\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>{formik.errors.name}</div>\n                </div>\n              )}\n            </div>\n          </div>\n          <SelectOptionProvince\n            required\n            province_code={formik.values.province_code} onSelectProvince={code => formik.setFieldValue('province_code', code)}\n            district_code={formik.values.district_code} onSelectDistrict={code => formik.setFieldValue('district_code', code)}\n            ward_code={formik.values.ward_code} onSelectWard={code => formik.setFieldValue('ward_code', code)}\n          />\n          <div className='row mb-6'>\n            <label className='col-lg-4 col-form-label fw-bold fs-6'>\n              <span className='required'>Địa chỉ</span>\n            </label>\n\n            <div className='col-lg-8 fv-row'>\n              <input\n                className='form-control form-control-lg form-control-solid'\n                placeholder='Địa chỉ'\n                {...formik.getFieldProps('short_address')}\n              />\n              {formik.touched.short_address && formik.errors.short_address && (\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>{formik.errors.short_address}</div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='row mb-6'>\n            <label className='col-lg-4 col-form-label fw-bold fs-6'>\n              <span>Trạng thái</span>\n            </label>\n            <div className='col-lg-8 fv-row'>\n              <Switch checked={formik.values.active} onChange={e => formik.setFieldValue('active', e)} />\n            </div>\n          </div>\n          <div className=\"mb-6\">\n            <label className='col-lg-4 col-form-label fw-bold fs-6'>\n              <span>Thông tin liên hệ</span>\n            </label>\n            <div className='table-responsive'>\n              {/* begin::Table */}\n              <table className='table align-middle gs-0 gy-4'>\n                {/* begin::Table head */}\n                <thead>\n                  <tr className='fw-bold text-muted bg-light'>\n                    <th className='ps-4 min-w-125px'>Phân loại liên hệ</th>\n                    <th className='ps-4 min-w-250px rounded-start'>Giá trị</th>\n                    <th className='ps-4 min-w-250px rounded-start'>Icon</th>\n                    <th className='min-w-50 text-end rounded-end'></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    formik.values.contacts.map((item, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <Select\n                              value={getValueContactType(item.contact_type || '')}\n                              onChange={(e: any) => editRowContact(index, 'contact_type', e.value)}\n                              options={types.map(type => ({ value: type.name, label: type.desc }))}\n                            />\n                          </td>\n                          <td>\n                            <Input placeholder=\"Giá trị\" defaultValue={item.value} onChange={e => editRowContact(index, 'value', e.target.value)} />\n                          </td>\n                          <td>\n                            <Input placeholder=\"Link icon\" defaultValue={item.icon} onChange={e => editRowContact(index, 'icon', e.target.value)} />\n                          </td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'\n                              onClick={() => deleteRowItem(index)}\n                            >\n                              <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n                {/* end::Table head */}\n                {/* begin::Table body */}\n                <tbody>\n\n                </tbody>\n                {/* end::Table body */}\n              </table>\n              <div className=\"d-flex justify-content-end\">\n                <ButtonLoading\n                  className=\"btn-success btn-sm mb-2\"\n                  title=\"Thêm mới liên hệ\"\n                  type=\"button\"\n                  onClick={addRowContact}\n                />\n              </div>\n              {/* end::Table */}\n            </div>\n          </div>\n          <div className='card-footer d-flex justify-content-end py-6 px-9'>\n            {\n              id &&\n              <ButtonLoading\n                title=\"Khôi phục\"\n                className=\"btn-secondary me-2\"\n                type=\"button\"\n                onClick={() => refetch()}\n                loading={isFetching}\n              />\n            }\n            <ButtonLoading\n              title='Lưu thông tin'\n              type='submit'\n              loading={mutateSaveData.isLoading}\n            />\n          </div>\n        </form>\n      </div>\n    </PermissionLayout>\n  )\n})\n\nexport default OrganizationsFormPage;"],"names":["OrganizationsFormPage","observer","id","useParams","types","useGetOrgContactTypes","organizationModel","useStores","handlePostMedia","usePostMedia","mutateSaveData","useMutation","mutationFn","body","patchOrg","Number","postOrg","onSuccess","Toast","onError","formik","useFormik","initialValues","name","province_code","undefined","district_code","ward_code","short_address","media_id","media","contacts","active","validationSchema","Yup","shape","required","onSubmit","values","omit","filter","i","contact_type","value","mutate","useQuery","queryKey","Const","queryFn","getOrg","enabled","data","setValues","province","code","district","ward","refetch","isFetching","editRowContact","index","key","newContacts","map","item","indexContact","setFieldValue","getValueContactType","type","find","label","desc","permissions","title","className","handleSubmit","noValidate","imageUrl","original_url","size","onChangeFile","files","callBackLocal","medias","origin_url","callBackApi","placeholder","getFieldProps","touched","errors","onSelectProvince","onSelectDistrict","onSelectWard","checked","onChange","e","options","defaultValue","target","icon","onClick","_i","deleteRowItem","path","loading","isLoading"],"sourceRoot":""}