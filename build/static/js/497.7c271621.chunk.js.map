{"version":3,"file":"static/js/497.7c271621.chunk.js","mappings":"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","sources":["app/pages/organizations/OrganizationsPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { Avatar, ConfirmAction, PermissionLayout, Switch, TabletBufferZone, TitlePage } from \"../../components\";\nimport { Link } from \"react-router-dom\";\nimport { useStores } from \"../../models/store\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Const } from \"../../common\";\nimport { FC, useState } from \"react\";\nimport { IOrganization } from \"../../interfaces\";\nimport { formatDate, Toast } from \"../../utils\";\nimport { KTSVG } from \"../../../_metronic/helpers\";\n\nconst OrganizationsPage = observer(() => {\n  const { organizationModel } = useStores();\n  const { data, isLoading, refetch } = useQuery({\n    queryKey: [Const.QueryKey.organizations],\n    queryFn: () => organizationModel.getOrgs()\n  })\n  const mutateDelete = useMutation({\n    mutationFn: (id: number) => organizationModel.deleteOrg(id),\n    onSuccess() { Toast.success('Xóa thành công'); refetch(); ConfirmAction.close() },\n    onError() { Toast.error() }\n  })\n  return (\n    <div className=\"card\">\n      <TitlePage\n        title=\"Thông tin công ty\"\n        element={\n          <PermissionLayout permissions={['.organizations.post']}>\n            <Link to={'/apps/organizations-form'} className=\"btn btn-primary\">Tạo mới</Link>\n          </PermissionLayout>\n        }\n      />\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bold text-muted bg-light'>\n                <th className='ps-4 min-w-250px rounded-start'>Thông tin</th>\n                <th className='ps-4 min-w-100px rounded-start'>Hình ảnh</th>\n                <th className='min-w-100px'>Địa chỉ</th>\n                <th className='min-w-175px'>Ngày tạo</th>\n                <th className='min-w-175px'>Cập nhật</th>\n                <th className='min-w-100px'>Trạng thái</th>\n                <th className='min-w-100px text-end rounded-end'></th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              <TabletBufferZone\n                isLoading={isLoading}\n                isEmpty={data?.total === 0 && !isLoading}\n              />\n              {\n                data?.data?.map(org => (\n                  <OrgItem key={org.id} org={org}\n                    onDelete={() => ConfirmAction.open({\n                      callBack: () => mutateDelete.mutate(org.id)\n                    })}\n                  />\n                ))\n              }\n            </tbody>\n            {/* end::Table body */}\n          </table>\n        </div>\n        {/* end::Table container */}\n      </div>\n    </div>\n  )\n})\n\nconst OrgItem: FC<{ org: IOrganization, onDelete?: () => void }> = ({ org, onDelete = () => null }) => {\n  const { organizationModel } = useStores();\n  const [active, setActive] = useState(org.active);\n  const mutateActive = useMutation({\n    mutationFn: (status: boolean) => organizationModel.patchOrg(org.id, { active: status, contacts: org.contacts }),\n    onSuccess() { Toast.success() },\n    onError() { Toast.error(); setActive(org.active) }\n  })\n  return (\n    <tr>\n      <td>\n        <span className=\"text-dark fw-bold mb-1 fs-6 ps-4\">{org.name}</span>\n      </td>\n      <td>\n        <Avatar imageUrl={org.media?.original_url} size={100} />\n      </td>\n      <td>\n        <span className=\"text-dark mb-1 fs-6 ps-4\">\n          {`${org.short_address}, ${org.ward?.name}, ${org.district?.name}, ${org.province?.name}`}\n        </span>\n      </td>\n      <td>\n        <span className=\"text-dark mb-1 fs-6 ps-4\">{formatDate(org.createdAt)}</span>\n      </td>\n      <td>\n        <span className=\"text-dark mb-1 fs-6 ps-4\">{formatDate(org.updatedAt)}</span>\n      </td>\n      <td>\n        <PermissionLayout permissions={['.organizations.:id.patch']}>\n          <Switch checked={active} onChange={e => {\n            setActive(e);\n            mutateActive.mutate(e)\n          }} />\n        </PermissionLayout>\n      </td>\n      <td className='text-end'>\n        <PermissionLayout permissions={['.organizations.:id.patch']}>\n          <Link\n            to={`/apps/organizations-form/${org.id}`}\n            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n          >\n            <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n          </Link>\n        </PermissionLayout>\n        <PermissionLayout permissions={['.organizations.:id.delete']}>\n          <button\n            onClick={onDelete}\n            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'\n          >\n            <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n          </button>\n        </PermissionLayout>\n      </td>\n    </tr>\n  )\n}\n\nexport default OrganizationsPage;"],"names":["OrganizationsPage","observer","organizationModel","useStores","useQuery","queryKey","Const","queryFn","getOrgs","data","isLoading","refetch","mutateDelete","useMutation","mutationFn","id","deleteOrg","onSuccess","Toast","ConfirmAction","onError","className","title","element","permissions","to","isEmpty","total","map","org","OrgItem","onDelete","callBack","mutate","useState","active","setActive","mutateActive","status","patchOrg","contacts","name","imageUrl","media","original_url","size","short_address","ward","district","province","formatDate","createdAt","updatedAt","checked","onChange","e","path","onClick"],"sourceRoot":""}