{"version":3,"file":"static/js/38.bdfc12fe.chunk.js","mappings":"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","sources":["app/pages/users/UsersPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { FC, useState } from \"react\";\nimport { Avatar, ButtonLoading, ConfirmAction, Input, Pagination, PermissionLayout, Switch, TabletBufferZone, TitlePage } from \"../../components\";\nimport { KTSVG } from \"../../../_metronic/helpers\";\nimport { useStores } from \"../../models/store\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Const } from \"../../common\";\nimport { aesEncode, formatDate, Toast } from \"../../utils\";\nimport { useDebounce, useQueryParams } from \"../../hooks\";\nimport { IUserProfile, QrUser, ReqPostUser } from \"../../interfaces\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst UsersPage: FC = observer(() => {\n  const navigate = useNavigate();\n  const { query, handleQueryString } = useQueryParams<QrUser>();\n  const search = useDebounce(query.search || '');;\n  const { userModel } = useStores();\n  const { data, isLoading, refetch } = useQuery({\n    queryKey: [Const.QueryKey.users, { ...query, search }],\n    queryFn: () => userModel.getUsers({ ...query, search, sort: '-createdAt' }),\n  })\n  const mutateDelete = useMutation({\n    mutationFn: (id: number) => userModel.deleteUser(id),\n    onSuccess() { Toast.success('Xóa thành công'); refetch(); ConfirmAction.close() },\n    onError() { Toast.error() }\n  })\n  const onDelete = (id: number) => {\n    ConfirmAction.open({\n      callBack: () => mutateDelete.mutate(id)\n    })\n  }\n  return (\n    <PermissionLayout permissions={['.users.get']} showEmpty>\n      <TitlePage title=\"Người dùng\"\n        element={\n          <PermissionLayout permissions={['.users.post']}>\n            <ButtonLoading title=\"Tạo mới\" onClick={() => navigate('/apps/users-form')} />\n          </PermissionLayout>\n        }\n      />\n      <div className={`card`}>\n        {/* begin::Header */}\n        <div className='card-header border-0 pt-5'>\n          <div className=\"w-25\">\n            <Input\n              placeholder=\"Tìm kiếm Tên, email, điện thoại...\"\n              defaultValue={query.search}\n              onChange={e => handleQueryString('search', e.target.value)}\n            />\n          </div>\n        </div>\n        {/* end::Header */}\n        {/* begin::Body */}\n        <div className='card-body py-3'>\n          {/* begin::Table container */}\n          <div className='table-responsive'>\n            {/* begin::Table */}\n            <table className='table align-middle gs-0 gy-4'>\n              {/* begin::Table head */}\n              <thead>\n                <tr className='fw-bold text-muted bg-light'>\n                  <th className='ps-4 min-w-250px rounded-start'>Thông tin</th>\n                  <th className='ps-4 min-w-250px rounded-start'>Email</th>\n                  <th className='min-w-125px'>Quyền</th>\n                  <th className='min-w-125px'>Ngày tạo</th>\n                  <th className='min-w-125px'>Cập nhật</th>\n                  <th className='min-w-100px'>Trạng thái</th>\n                  <th className='min-w-100px text-end rounded-end'></th>\n                </tr>\n              </thead>\n              {/* end::Table head */}\n              {/* begin::Table body */}\n              <tbody>\n                <TabletBufferZone\n                  isLoading={isLoading}\n                  isEmpty={data?.total === 0 && !isLoading}\n                />\n                {\n                  data?.data?.map(user => (\n                    <UserItem key={user.id} user={user} onDelete={onDelete} />\n                  ))\n                }\n              </tbody>\n              {/* end::Table body */}\n            </table>\n            {/* end::Table */}\n            <Pagination\n              count={data?.total_page}\n              page={query.page}\n              onChangePage={e => handleQueryString('page', e)}\n            />\n          </div>\n          {/* end::Table container */}\n        </div>\n        {/* begin::Body */}\n      </div>\n    </PermissionLayout>\n  )\n})\n\ninterface UserItemProps {\n  user: IUserProfile;\n  onDelete?: (id: number) => void;\n}\n\nconst UserItem: FC<UserItemProps> = ({ user, onDelete = () => null }) => {\n  const { userModel, topicModel } = useStores()\n  const [active, setActive] = useState(user.active);\n  const { mutate } = useMutation({\n    mutationFn: (body: ReqPostUser) => userModel.patchUser(user.id, body),\n    onSuccess() {\n      Toast.success();\n    },\n    onError() {\n      setActive(user.active);\n      Toast.error();\n    },\n  })\n  const onChangeStatus = (check: boolean) => {\n    setActive(check);\n    mutate({ active: check })\n  }\n  const navigate = useNavigate();\n  const onNavigateMessenger = async () => {\n    const topic = await topicModel.postTopic({ recipient_id: user.id, group_name: '' })\n    if (topic.id) {\n      navigate(`/apps/messengers?topic_id=${aesEncode(String(topic.id))}`)\n    }\n  }\n  return (\n    <tr key={user.id}>\n      <td>\n        <div className='d-flex align-items-center'>\n          <div className='symbol symbol-50px me-5'>\n            <Avatar imageUrl={user.media?.original_url} size={50} />\n          </div>\n          <div className='d-flex justify-content-start flex-column'>\n            <span className='text-dark fw-bold text-hover-primary mb-1 fs-6'>\n              {user.fullname}\n            </span>\n            <span className='text-muted fw-semobold text-muted d-block fs-7'>\n              {user.telephone}\n            </span>\n          </div>\n        </div>\n      </td>\n      <td>\n        <span className='text-dark d-block mb-1 fs-6'>\n          {user.email}\n        </span>\n      </td>\n      <td>\n        <span className='text-dark fw-bold d-block mb-1 fs-6'>\n          {user.roles.length === 0 ? 'Khách' : 'Đội ngũ'}\n        </span>\n      </td>\n      <td>\n        <span className='text-dark fw-bold d-block mb-1 fs-6'>\n          {formatDate(user.createdAt)}\n        </span>\n      </td>\n      <td>\n        <span className='text-dark fw-bold d-block mb-1 fs-6'>\n          {formatDate(user.updatedAt)}\n        </span>\n      </td>\n      <td>\n        <PermissionLayout permissions={['.users.:id.patch']}>\n          <Switch\n            checked={active}\n            onChange={onChangeStatus}\n          />\n        </PermissionLayout>\n      </td>\n      <td className='text-end'>\n        <PermissionLayout permissions={['.users.:id.get', '.users.:id.patch']}>\n          <Link\n            to={`/apps/users-form/${user.id}`}\n            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n          >\n            <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n          </Link>\n        </PermissionLayout>\n        <PermissionLayout permissions={['.users.:id.delete']}>\n          <button\n            onClick={() => onDelete(user.id)}\n            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n          >\n            <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n          </button>\n        </PermissionLayout>\n        <button\n          onClick={onNavigateMessenger}\n          className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n        >\n          <KTSVG path='/media/icons/duotune/communication/com003.svg' className='svg-icon-3' />\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nexport default UsersPage;"],"names":["UsersPage","observer","navigate","useNavigate","useQueryParams","query","handleQueryString","search","useDebounce","userModel","useStores","useQuery","queryKey","Const","queryFn","getUsers","sort","data","isLoading","refetch","mutateDelete","useMutation","mutationFn","id","deleteUser","onSuccess","Toast","ConfirmAction","onError","onDelete","callBack","mutate","permissions","showEmpty","title","element","onClick","className","placeholder","defaultValue","onChange","e","target","value","isEmpty","total","map","user","UserItem","count","total_page","page","onChangePage","topicModel","useState","active","setActive","body","patchUser","onNavigateMessenger","postTopic","recipient_id","group_name","topic","aesEncode","String","imageUrl","media","original_url","size","fullname","telephone","email","roles","length","formatDate","createdAt","updatedAt","checked","check","to","path"],"sourceRoot":""}